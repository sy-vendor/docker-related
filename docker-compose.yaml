version: '3.4'
services:

  # hystrix-dashboard
  hystrix-dashboard:
    image: mlabouardy/hystrix-dashboard:latest
    restart: always
    ports:
      - 8088:8088
    volumes:
      - /etc/localtime:/etc/localtime  

  # zookeeper
  zookeeper:
    image: wurstmeister/zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    volumes:
      - /etc/localtime:/etc/localtime
      
 #  kafka
  kafka1:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka1
    hostname: kafka1
    ports:
      - 9092:9092
    environment:
      KAFKA_HOST_NAME: kafka1
      KAFKA_ADVERTISED_HOST_NAME: kafka1
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.1:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 0
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
    links:
      - zookeeper

  kafka2:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka2
    hostname: kafka2
    ports:
      - 9093:9092
    environment:
      KAFKA_HOST_NAME: kafka2
      KAFKA_ADVERTISED_HOST_NAME: kafka2
      KAFKA_ADVERTISED_PORT: 9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.1:9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
    links:
      - zookeeper

  kafka3:
    image: wurstmeister/kafka
    restart: always
    container_name: kafka3
    hostname: kafka3
    ports:
      - 9094:9092
    environment:
      KAFKA_HOST_NAME: kafka3
      KAFKA_ADVERTISED_HOST_NAME: kafka3
      KAFKA_ADVERTISED_PORT: 9094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.1:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/localtime:/etc/localtime
    links:
      - zookeeper
 
  kafka-manager:
    image: sheepkiller/kafka-manager
    restart: always
    container_name: kafka-manager
    hostname: kafka-manager
    ports:
      - 9000:9000
    links:
      - kafka1
      - kafka2
      - kafka3
      - zookeeper

  # mongo
  mongo:
    image: mongo:3.4
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongo/init:/docker-entrypoint-initdb.d/
      - ./data/mongo:/data/db
      - /etc/localtime:/etc/localtime

      
  # mysql 
  mysql:
    image: mysql:5.7
    restart: always
    ports:
      - 3306:3306
    volumes:
      - ./mysql/init:/docker-entrypoint-initdb.d/
      - ./data/mysql:/var/lib/mysql
      - ./mysql/my.cnf:/etc/my.cnf
      - /etc/localtime:/etc/localtime
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: test
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin

      
  # redis
  redis:
    image: redis:5.0
    restart: always
    ports:
      - 6379:6379
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"] 
    volumes:
      - ./data/redis:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /etc/localtime:/etc/localtime

  # etcd
  etcd:
    image: ascs/etcd:3.3.10
    restart: always
    ports:
      - 2379:2379
      - 2380:2380
    environment:
      ETCDCTL_API: 3
    command: /usr/local/bin/etcd -name s1 -advertise-client-urls http://192.168.1.1:2379 -listen-client-urls http://0.0.0.0:2379 -initial-advertise-peer-urls http://192.168.1.1:2380 -listen-peer-urls http://0.0.0.0:2380 -initial-cluster-token tkn -initial-cluster "s1=http://192.168.1.1:2380" -initial-cluster-state new
    volumes:
      - /etc/localtime:/etc/localtime
  
  # jaeger 
  jaeger:
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    volumes:
      - /etc/localtime:/etc/localtime

  # elasticsearch
  elasticsearch:
    image: elasticsearch:7.9.3
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=admin
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic
    restart: always

  # kibana
  kibana:
    image: kibana:7.9.3
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=admin
    ports:
      - "5601:5601"
    networks:
      - elastic
    depends_on:
      - elasticsearch
    restart: always

  # rabbitmq cluster
  rabbitmq1:
    image: rabbitmq:3.9-management
    container_name: rabbitmq1
    hostname: rabbitmq1
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./data/rabbitmq1:/var/lib/rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - rabbitmq
    restart: always

  rabbitmq2:
    image: rabbitmq:3.9-management
    container_name: rabbitmq2
    hostname: rabbitmq2
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./data/rabbitmq2:/var/lib/rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    networks:
      - rabbitmq
    depends_on:
      - rabbitmq1
    restart: always

  rabbitmq3:
    image: rabbitmq:3.9-management
    container_name: rabbitmq3
    hostname: rabbitmq3
    environment:
      - RABBITMQ_ERLANG_COOKIE=secret_cookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json
      - ./data/rabbitmq3:/var/lib/rabbitmq
    ports:
      - "5674:5672"
      - "15674:15672"
    networks:
      - rabbitmq
    depends_on:
      - rabbitmq1
      - rabbitmq2
    restart: always

networks:
  elastic:
    driver: bridge
  rabbitmq:
    driver: bridge

